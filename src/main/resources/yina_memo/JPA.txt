JPA 노트 - 엔티티클래스와 JpaRepository

* 엔티티 클래스
  @Entity 가 붙은 클래스(== EntityManager들에 의해 관리받는 Obj)

* 엔티티 클래스에서 사용하는 어노테이션
@Entity --------> 엔티티클래스다! EntityManager가 관리하는 클래스다!
이게 붙으면 엔티티클래스라는 뜻,
이 클래스의 인스턴스들이 JPA로 관리되는 엔티티객체 라는 것

@Table --------> 이 엔티티클래스의 테이블은 이런 속성을 가진다!
엔티티클래스에서 @Entity와 함께 사용하는 어노테이션, 말그대로 DB에서 이 엔티티클래스의 어떤 테이블로 생성할 것인지에 대한 정보를 담는다.
[예시] @Table(name="tbl") 형태로 쓰면 이 엔티티클래스로 만들어진 테이블의 이름은 "tbl"이라는 테이블이다.
catalog, indexes, schema, uniqConstraints 등등 지정할 수 있다.

@Id --------> 이게 붙은 필드는 PK다! 모든 엔티티클래스는 @Id가 붙은 필드를 갖고있어야만 한다!
엔티티 클래스에서 PK에 해당하는 필드에 붙이고, PK값을 사용자에게 입력받을게 아니라면
일반적으로는 자동생성되는 번호를 사용하기 위해 @GeneratedValue를 사용한다.

@GeneratedValue(strategy=GenerationType.IDENTITY)
PK를 자동으로 생성할 때 사용(키생성전략)
************************** 키 생성 전략 *****************************
    1. AUTO  (이게 default)
    JPA 구현체가 생성방식을 결정하는 경우

    2. IDENTITY
    사용하는 DB가 키생성을 결정
    (MySQL이나 MariaDB의 경우 auto increment 로 지정하면 시퀀스처리됨)

    3. SEQUENCE
    DB의 시퀀스를 이용해서 키 생성 ---> @SequenceGenerator와 함께 사용

    4. TABLE
    키 생성 전용 테이블을 생성해서 키를 생성 ---> @TableGenerator와 함께 사용
*******************************************************************

@Column
기본적으로 엔티티클래스의 필드로 선언하면 테이블의 컬럼이 된다
그럼 @Column은 왜사용하나? 기본값 외에 추가로 변경이 필요한 옵션이 있다면 사용
 * ex1) 문자열의 경우 VARCHAR(255)가 기본값인데, 사이즈를 500으로 늘린다거나 : String title의 속성지정 length=500
 * ex2) 데이터타입을 TEXT로 변경하고싶다거나 : String content의 속성지정 columnDefinition = "TEXT"
